package main

import (
	"fmt"
	"slices"
	"sort"
	"strings"
)

/*
=== Поиск анаграмм по словарю ===

Напишите функцию поиска всех множеств анаграмм по словарю.
Например:
'пятак', 'пятка' и 'тяпка' - принадлежат одному множеству,
'листок', 'слиток' и 'столик' - другому.

Входные данные для функции: ссылка на массив - каждый элемент которого - слово на русском языке в кодировке utf8.
Выходные данные: Ссылка на мапу множеств анаграмм.
Ключ - первое встретившееся в словаре слово из множества
Значение - ссылка на массив, каждый элемент которого, слово из множества. Массив должен быть отсортирован по возрастанию.
Множества из одного элемента не должны попасть в результат.
Все слова должны быть приведены к нижнему регистру.
В результате каждое слово должно встречаться только один раз.

Программа должна проходить все тесты. Код должен проходить проверки go vet и golint.
*/

func main() {
	allTheWord := []string{"пятак", "s", "", "листок", "пятка", "листок", "слиток", "тяпка", "столик"}

	dict := make(map[string][]string)

	for _, word := range allTheWord {
		word = strings.ToLower(word)
		if len(word) <= 1 {
			continue
		}

		splitWord := strings.Split(word, "")
		sort.Strings(splitWord)
		sortedWord := strings.Join(splitWord, "")

		if !slices.Contains(dict[sortedWord], word) {
			dict[sortedWord] = append(dict[sortedWord], word)
		}
	}

	fmt.Println(dict)
}
